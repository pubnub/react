{"version":3,"sources":["modules/clean.js"],"names":["clean","channel","_broadcast","isSubscribe","_component","setState","pn_messages","prevState","$set","pn_presence"],"mappings":";;;;;QAOgBA,K,GAAAA,K;;AAPhB;;;;;;;;AAOO,SAASA,KAAT,CAAeC,OAAf,EAAwB;AAC7B,MAAI,KAAKC,UAAL,CAAgBC,WAAhB,CAA4B,SAA5B,EAAuCF,OAAvC,CAAJ,EAAqD;AACnD,SAAKG,UAAL,CAAgBC,QAAhB,CAAyB;AAAA,aAAc;AACrCC,qBAAa,kCAAOC,UAAUD,WAAjB,sBAAiCL,OAAjC,EAA2C,EAAEO,MAAM,EAAR,EAA3C;AADwB,OAAd;AAAA,KAAzB;AAGD;;AAED,MAAI,KAAKN,UAAL,CAAgBC,WAAhB,CAA4B,UAA5B,EAAwCF,OAAxC,CAAJ,EAAsD;AACpD,SAAKG,UAAL,CAAgBC,QAAhB,CAAyB;AAAA,aAAc;AACrCI,qBAAa,kCAAOF,UAAUE,WAAjB,sBAAiCR,OAAjC,EAA2C,EAAEO,MAAM,EAAR,EAA3C;AADwB,OAAd;AAAA,KAAzB;AAGD;AACF","file":"clean.js","sourcesContent":["import update from 'immutability-helper';\n\n/**\n * Clean the stack of messages for a channel or a set of channels\n *\n * @param {string|[string]} channel\n */\nexport function clean(channel) {\n  if (this._broadcast.isSubscribe('message', channel)) {\n    this._component.setState(prevState => ({\n      pn_messages: update(prevState.pn_messages, { [channel]: { $set: [] } })\n    }));\n  }\n\n  if (this._broadcast.isSubscribe('presence', channel)) {\n    this._component.setState(prevState => ({\n      pn_presence: update(prevState.pn_presence, { [channel]: { $set: [] } })\n    }));\n  }\n}\n"]}